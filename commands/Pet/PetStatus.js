const { EmbedBuilder } = require("discord.js");
const GPet = require("../../settings/models/pet.js");
const { petGameLoop } = require("../../handlers/PetGameLoop");
const { getEmotionKey, getEmotionDescription, getEmotionAdvice, getEmotionEmoji, isUrgentEmotion } = require("../../structures/services/petEmotion");
const { getPoseKey, getPoseDescription, getPoseAdvice } = require("../../structures/services/petPose");
const { calculateHealth, getHealthStatus, getHealthDescription, getHealthAdvice, needsUrgentCare, getCareRecommendations } = require("../../structures/services/petHealthSystem");

module.exports = {
    name: ["‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á"],
    description: "‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•",
    category: "Pet",
    run: async (client, interaction) => {
        try {
            await interaction.deferReply({ ephemeral: false });

            const pet = await GPet.findOne({ guild: interaction.guild.id, user: interaction.user.id });
            if (!pet) {
                return interaction.editReply("‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `/pet starter` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà");
            }

            // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
            const emotion = getEmotionKey(pet);
            const pose = getPoseKey(pet);
            const health = calculateHealth(pet);
            const healthStatus = getHealthStatus(health);
            const needsUrgent = needsUrgentCare(pet);
            const careRecommendations = getCareRecommendations(pet);

            // ‡∏™‡∏£‡πâ‡∏≤‡∏á embed
            const embed = new EmbedBuilder()
                .setTitle(`üêæ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á: ${pet.name}`)
                .setColor(needsUrgent ? '#ff0000' : (health >= 15 ? '#00ff00' : '#ffaa00'))
                .setThumbnail(interaction.user.avatarURL())
                .setTimestamp();

            // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
            embed.addFields(
                {
                    name: "üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô",
                    value: `**‡∏ä‡∏∑‡πà‡∏≠:** ${pet.name}\n**‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:** ${pet.type}\n**‡∏£‡∏∞‡∏î‡∏±‡∏ö:** ${pet.level}\n**‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå:** ${pet.exp}/${pet.nextexp}`,
                    inline: true
                },
                {
                    name: "üíñ ‡∏Ñ‡πà‡∏≤‡∏´‡∏•‡∏±‡∏Å",
                    value: `**‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏≠‡πá‡∏ô‡∏î‡∏π:** ${pet.affection}/20\n**‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏¥‡πà‡∏°:** ${pet.fullness}/20\n**‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πâ‡∏≤:** ${pet.fatigue}/20\n**‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏Å‡∏õ‡∏£‡∏Å:** ${pet.dirtiness}/20`,
                    inline: true
                },
                {
                    name: "üè• ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û",
                    value: `**‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°:** ${health}/20\n**‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:** ${getHealthDescription(healthStatus)}\n**‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô:** ${needsUrgent ? '‡πÉ‡∏ä‡πà' : '‡πÑ‡∏°‡πà'}`,
                    inline: true
                }
            );

            // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
            const emotionEmoji = getEmotionEmoji(emotion);
            const urgentIcon = needsUrgent ? 'üö®' : '';
            
            embed.addFields(
                {
                    name: `${emotionEmoji} ‡∏≠‡∏µ‡πÇ‡∏°‡∏ï‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô`,
                    value: `**${getEmotionDescription(emotion)}**\n${getEmotionAdvice(emotion)}`,
                    inline: true
                },
                {
                    name: "üé≠ ‡∏ó‡πà‡∏≤‡∏ó‡∏≤‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô",
                    value: `**${getPoseDescription(pose)}**\n${getPoseAdvice(pose)}`,
                    inline: true
                },
                {
                    name: "üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û",
                    value: getHealthAdvice(healthStatus),
                    inline: true
                }
            );

            // ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•
            if (careRecommendations.length > 0) {
                const urgentRecs = careRecommendations.filter(rec => rec.priority === 'urgent');
                const highRecs = careRecommendations.filter(rec => rec.priority === 'high');
                const mediumRecs = careRecommendations.filter(rec => rec.priority === 'medium');

                let recommendationsText = '';
                
                if (urgentRecs.length > 0) {
                    recommendationsText += 'üö® **‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô:**\n';
                    urgentRecs.forEach(rec => {
                        recommendationsText += `${rec.emoji} ${rec.message}\n`;
                    });
                    recommendationsText += '\n';
                }

                if (highRecs.length > 0) {
                    recommendationsText += '‚ö†Ô∏è **‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:**\n';
                    highRecs.forEach(rec => {
                        recommendationsText += `${rec.emoji} ${rec.message}\n`;
                    });
                    recommendationsText += '\n';
                }

                if (mediumRecs.length > 0) {
                    recommendationsText += '‚ÑπÔ∏è **‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:**\n';
                    mediumRecs.forEach(rec => {
                        recommendationsText += `${rec.emoji} ${rec.message}\n`;
                    });
                }

                if (recommendationsText) {
                    embed.addFields({
                        name: "üìã ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•",
                        value: recommendationsText,
                        inline: false
                    });
                }
            }

            // ‡∏õ‡∏è‡∏¥‡∏Å‡∏¥‡∏£‡∏¥‡∏¢‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
            if (pet.lastReactions && pet.lastReactions.length > 0) {
                embed.addFields({
                    name: "üí¨ ‡∏õ‡∏è‡∏¥‡∏Å‡∏¥‡∏£‡∏¥‡∏¢‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î",
                    value: pet.lastReactions.join('\n'),
                    inline: false
                });
            }

            // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏∞‡∏ö‡∏ö
            const systemStats = petGameLoop.getStats();
            embed.addFields({
                name: "‚öôÔ∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏∞‡∏ö‡∏ö",
                value: `**‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:** <t:${Math.floor(pet.lastUpdate?.getTime() / 1000) || 0}:R>\n**Tick ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:** #${pet.lastTick || 0}\n**‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:** ${systemStats.isRunning ? '‚úÖ' : '‚ùå'}`,
                inline: false
            });

            // Footer
            embed.setFooter({ 
                text: needsUrgent ? 'üö® ‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô!' : 'üíñ ‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏´‡πâ‡∏î‡∏µ‡∏ô‡∏∞' 
            });

            await interaction.editReply({ embeds: [embed] });

        } catch (error) {
            console.error('Error in petstatus command:', error);
            try {
                await interaction.editReply({ 
                    content: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á" 
                });
            } catch (editError) {
                console.error('Failed to edit interaction:', editError);
            }
        }
    }
};

